//####Product. - Означает переделанные пункты на новые.

//------------------------------------------------------
//1. Создаем для товара новый компанент. Называем products в качестве передаваемых значений мы будем использовать props
//------------------------------------------------------

Vue.component('products', {
	//------------------------------------------------------
	//2.предаваемые занчения products -массив с товарами. img - изображение,
	//------------------------------------------------------

	// ================================================================
	//####Product.1 = Убираем пропсы и добовляем данные kомпонента. Забираме их из VueJS data
	//Все что нам необходимо для продукта забираме из data VueJS
	// props: ['products', 'img'],
	// ================================================================

	data() {
		return {
			imgCatalog: 'https://avatarko.ru/img/kartinka/32/Halloween_31492.jpg',
			filtered: [],
			products: [],
			catalogUrl: '/catalogData.json',
		}
	},

	// ================================================================
	//####Product.3.1 = Все методы что использует наш продукт переносим в компонент
	//####Product.3.2 = Забираем только метод фильтрации.
	// ================================================================

	methods: {
		//####Filter.2.4 = Добовляем значение value и будем его использовать в создании нового регулярного выражения new RegExp(this.userSearch, 'i');
		//####Filter.2.5 = Меняем new RegExp(this.userSearch, 'i');  на new RegExp(value, 'i');

		filter(value) {

			//------------------------------------------------------
			//Формируем новое регуялрное выражение - это новый экземпляр RegExp
			//------------------------------------------------------

			let regexp = new RegExp(value, 'i');

			//------------------------------------------------------
			//Изменяем массив фильтред. Мы будем отображать товары с массива. Фильтруем товары из Продуктс и помещаем их в Фильтеред
			//------------------------------------------------------

			this.filtered = this.products.filter(el => regexp.test(el.product_name))
		}
	},

	// ================================================================
	//####Product.2.1 = Добовляем mounted(){}. Данные должны приходить в компанент. Они не должны приходить из родительского элемента.

	//####Product.2.2 = Забираим их из VueJS
	// ================================================================

	mounted() {

		// ================================================================
		// ####Product.6.1 = Метод getJson является методом родителя. НАм надо на него ссылаться. Добавим $parent
		// ================================================================

		this.$parent.getJson(`${API_URL + this.catalogUrl}`)

			//------------------------------------------------------
			// получаем данные с URL
			//------------------------------------------------------

			.then(data => {

				//------------------------------------------------------
				//Итерируем, перебераем данные
				//------------------------------------------------------

				for (let el of data) {

					//------------------------------------------------------
					// добовляем в массив с товарами
					//------------------------------------------------------

					this.products.push(el);

					//------------------------------------------------------
					// добовляем в массив для фильтрации данных (поиск по сайту)
					//------------------------------------------------------

					this.filtered.push(el);
				}
			});

		this.$parent.getJson(`getProducts.json`)
			.then(data => {
				for (let el of data) {
					this.products.push(el);
					this.filtered.push(el);
				}
			})
	},

	//------------------------------------------------------
	//3.шаблон товара. Разметка
	//8. Добовляем разметку нашему товару
	//9. Генерируем в <product> Новые компоненты товаров при v-for="item of products" создаем элемент item из массива products, который пришел от массива products
	//10. Оперделяем ключ
	//11. Передаем Img и product
	//12. Дорабатываем реализацию на HTML 
	//------------------------------------------------------

	// ================================================================
	//####Product.4.1 = Дорабатываем шаблон

	//####Product.4.2 = Будем отображать товары из массива фильтред. меняем v-for="item of products" на v-for="item of filtered"

	//####Product.4.3 = Подправим img = imgCatalog
	// ================================================================

	template: `
	<div class="shop">
		<product v-for="item of filtered" :key="item.id_product" :img="imgCatalog" :product="item"></product>
	</div>
	`
});

//------------------------------------------------------
//4.регистрируем еще один компонент для корзины (ребенок)
//------------------------------------------------------

// ================================================================
//####Product.5.1 = Событие добавления товара связано с корзиной.  Выбрасываем событие к родителю  @click="$parent.$emit('add-product', product)"  ==>  @click="$emit('add-product', product)"

//####Product.5.2 = удаляем @click="$emit('add-product', product)" и делаем ссылку на родителя @parent в родительском vue есть обьект @refs (обьект со всеми ссылками) в нем в качестве свойств хранятся наши компаненты. и вызываем наш метод add-product в качестве  занчения передаем товар с которым взаимодействуем (product) @click="$parent.$refs.cart.addProduct(product)"
// ================================================================

Vue.component('product', {
	props: ['product', 'img'],

	//------------------------------------------------------
	//5. Разметка для одного товара 
	//------------------------------------------------------

	template: `
	<div class="product-item">
		<div class="img-property">
			<img :src="img" alt="item">
		</div>
		<div class="description">
			<section class="desc-content">
				<h3>{{product.product_name}}</h3>
				<p>{{product.price}} p.</p>
			</section>
			<button class="btn-buy" type="button" @click="$parent.$parent.$refs.cart.addProduct(product)">Купить</button>
		</div>
	</div>
	`
	// ================================================================
	// чтоб обратится к родителю родителя используем   $parent.$parent.
	// Но вложенность может быть очень большой. Можно обратится к общему глобальному родителю с помощью записи $root - это самы базовый Vue который мы определяем
	// ================================================================


	//------------------------------------------------------
	//6. Итерацию мы тут не используем  и ключ тут тоже не надо v-for="product of filtered" :key="product.id_product"
	//7. На кнопку купить мы меняем @click="addProduct(product)" на @click="$parent.$emit('add-product', product)"
	//add-product - метод. product - товар
	//------------------------------------------------------
});