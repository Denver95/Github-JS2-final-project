// ####Filter. - Означает переделанные пункты на новые.

// ================================================================
//####Filter.1.1 = Создаем новый компонент фильтра.
//####Filter.1.2 = передаем сюда функцию data которая контралирует пользовательский ввод
// ================================================================

Vue.component('filter-el', {
	data() {

		// ================================================================
		//####Filter.1.3 = Возвращаем обьект, который пользователь хочет найти. Коипируем из data VueJS
		// ================================================================

		return {
			userSearch: '',
		}
	},

	// ================================================================
	//####Filter.2.1 = Создаем разметку для нашего компаннета фильтра. Вырезаем из HTML документа.
	//####Filter.2.2 = Вместо старой разметки будем использовать <filter-el>
	//####Filter.2.3 = Обращаемся к родителю @submit.prevent="$parent.$refs.products.filter(userSearch)" вместо @submit.prevent="filter"
	//####Filter.2.4 = Добовляем в ProductComp в методе filter передваем значение от пользователя value
	// ================================================================

	template: `
	<form action="#" class="search-form" @submit.prevent="$parent.$refs.products.filter(userSearch)">			
		<input type="text" class="search-field" v-model="userSearch">
		<button class="btn-search" type="submit">
			<i class="fas fa-search icon-search"></i>
		</button>
	</form>
	`
	// ================================================================
	// чтоб обратится к родителю родителя используем   $parent.$parent.
	// Но вложенность может быть очень большой. Можно обратится к общему глобальному родителю с помощью записи $root - это самы базовый Vue который мы определяем
	// ================================================================
});