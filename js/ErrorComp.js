//####Error. - Означает переделанные пункты на новые.

// ================================================================
//####Error.1.1 = Создаем новый компонент который будет выдвать текст с ошибкой если мы не  получили данные из сервера иил что-то пошло не так
// ================================================================

Vue.component('error', {

	// ================================================================
	//####Error.2.1 = Указываем данные
	//####Error.2.2 = текст получения ошибки. Изначально свойство пустое.
	// ================================================================

	data() {
		return {
			text: ''
		}
	},

	// ================================================================
	//####Error.5.1 = Создаем метод с помощью его будем отоборжать ошибку
	//####Error.5.2 = Присваем в текст переданную ошибку, которую получаем в качестве аргумента 
	// ================================================================

	methods: {
		setError(error) {
			this.text = error
		}
	},

	// ================================================================
	//####Error.4.1 = Создаем вычесляемое значение
	//####Error.4.2 = Если у нас есть ошибка то будем отображать, если нету то не будем.
	// ================================================================

	computed: {
		isVisible() {
			return this.text !== ''
		}
	},

	// ================================================================
	//####Error.3.1 = Создаем шаблон HTML
	//####Error.3.2 = isVisible  вычесляемое свойство
	//####Error.3.3 = При клике на кнопку будем использовать метод setError
	//####Error.3.4 = Отображать ошибку будем в методе getJson VueJS 
	//####Error.3.5 = В разметку HTML добавим компанент error
	// ================================================================

	template: `
	<div class="error-block" v-if="isVisible"> 
        <p class="error-msg">
            <button class="close-btn" @click="setError('')">&times;</button>
            {{ text }}
        </p>
    </div>
	`
});